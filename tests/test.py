import unittest
import numpy as np

from faiss import FaissIndexer

class TestFaissIndexer(unittest.TestCase):
  def setUp(self):
    self.indexer = FaissIndexer(10, "IVF10,Flat")
    self.data_train = [[0.4160653 , 0.699296  , 0.08550052, 0.09267139, 0.16659127,
        0.15521939, 0.08667808, 0.53816867, 0.28045782, 0.98565084],
       [0.5785651 , 0.40788254, 0.34876716, 0.94744086, 0.1380951 ,
        0.12057038, 0.2091714 , 0.3085816 , 0.12968169, 0.5997021 ],
       [0.05689577, 0.844781  , 0.37868962, 0.62722784, 0.9561681 ,
        0.10530342, 0.0489817 , 0.04490591, 0.7561756 , 0.87054664],
       [0.7303126 , 0.72600275, 0.71281296, 0.33274534, 0.5447094 ,
        0.99199384, 0.51477987, 0.44845265, 0.3741374 , 0.32043654],
       [0.34293458, 0.63226706, 0.9189089 , 0.7219028 , 0.15255097,
        0.8135162 , 0.30694643, 0.636544  , 0.18828161, 0.36585942],
       [0.91758657, 0.9032657 , 0.8926305 , 0.7422281 , 0.54015535,
        0.2912284 , 0.52832794, 0.8230399 , 0.22922508, 0.6113163 ],
       [0.16116874, 0.8931359 , 0.06032106, 0.23319256, 0.2303913 ,
        0.32770815, 0.2142919 , 0.8734408 , 0.05634728, 0.64085805],
       [0.07965906, 0.29986888, 0.99504095, 0.5312148 , 0.9343742 ,
        0.34301868, 0.5847466 , 0.7580665 , 0.24724412, 0.8569195 ],
       [0.68648213, 0.91222304, 0.9375534 , 0.2326546 , 0.17884058,
        0.35068053, 0.4663493 , 0.9270173 , 0.03620356, 0.3711644 ],
       [0.9663115 , 0.4614651 , 0.7098007 , 0.10318984, 0.15792939,
        0.20932508, 0.5779139 , 0.90107846, 0.38104385, 0.24879433],
       [0.5748274 , 0.6577718 , 0.07523761, 0.510163  , 0.7664796 ,
        0.5508874 , 0.74115986, 0.78497344, 0.05921793, 0.25085863],
       [0.7423184 , 0.36319453, 0.5417267 , 0.10243247, 0.48371428,
        0.45299077, 0.30700964, 0.57390213, 0.97420895, 0.28434452],
       [0.13613303, 0.44029206, 0.41283292, 0.09478094, 0.8727212 ,
        0.35632637, 0.06289397, 0.7879379 , 0.9064969 , 0.25395733],
       [0.5031359 , 0.22136013, 0.21624544, 0.1515795 , 0.16558106,
        0.4250763 , 0.83489275, 0.42974454, 0.05634123, 0.13022614],
       [0.5003293 , 0.0017998 , 0.55115944, 0.11592956, 0.4962813 ,
        0.26186678, 0.03060767, 0.6799501 , 0.9487892 , 0.63259375]]
    self.data_test = [[0.3550401 , 0.22903867, 0.3926772 , 0.6535587 , 0.082405  ,
        0.7205599 , 0.8215876 , 0.41114953, 0.48510942, 0.71910125],
       [0.99697953, 0.72163045, 0.90638435, 0.83649206, 0.8141416 ,
        0.49922678, 0.66802806, 0.6669137 , 0.24482489, 0.552055  ],
       [0.9057303 , 0.2584708 , 0.23035003, 0.28709248, 0.08587031,
        0.9011879 , 0.24300675, 0.37771904, 0.13899046, 0.8778632 ],
       [0.94449806, 0.03563654, 0.7493496 , 0.22102036, 0.75371915,
        0.54499215, 0.83542335, 0.7506953 , 0.2382887 , 0.7032392 ],
       [0.30925915, 0.45531297, 0.3118101 , 0.5177084 , 0.74007183,
        0.87291366, 0.9777397 , 0.14742532, 0.45222548, 0.35014102]]

  def test_train_command(self):
    self.indexer.train(self.data_train)
    self.indexer.add(self.data_train)
    true_value = np.array([[0.9304702 , 0.9304702 , 0.9304702 , 0.9304702 , 0.9304702 ],
       [0.21434802, 0.21434802, 0.21434802, 0.21434802, 0.21434802],
       [1.1376785 , 1.1376785 , 1.1376785 , 1.1376785 , 1.1376785 ],
       [0.9807172 , 0.9807172 , 0.9807172 , 0.9807172 , 0.9807172 ],
       [0.8098495 , 0.8098495 , 0.8098495 , 0.8098495 , 0.8098495 ]], dtype = 'float32')
    self.assertTrue((self.indexer.find(self.data_test, 5)[0] == true_value).all())
